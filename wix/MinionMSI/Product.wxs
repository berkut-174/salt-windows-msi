<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi" >
  <Product Id="*" UpgradeCode="{FC6FB3A2-65DE-41A9-AD91-D10A402BD641}" Language="1033"
    Manufacturer="SaltStack, Inc"
    Name="Salt Minion $(var.DisplayVersion)"
    Version="$(var.InternalVersion)">

    <Package InstallerVersion="200" Compressed="yes" InstallScope="perMachine" />

    <MajorUpgrade
      DowngradeErrorMessage="A newer version of [ProductName] is already installed."
      AllowSameVersionUpgrades="yes" />
    <MediaTemplate EmbedCab="yes" CompressionLevel="low" />

    <Feature Id="ProductFeature" Title="Minion" Level="1">
      <ComponentGroupRef Id="ProductComponents" />
    </Feature>

    <Icon Id="icon" SourceFile="$(var.dist)\salt.ico" />
    <WixVariable Id="WixUILicenseRtf" Value="LICENSE.rtf" />

    <!-- override the banners -->
    <WixVariable Id="WixUIBannerBmp" Value="Banner.jpg" />
    <WixVariable Id="WixUIDialogBmp" Value="Dialog.jpg" />

    <Property Id="ARPPRODUCTICON"                       Value="icon"                 />
    <Property Id="ARPURLINFOABOUT"                      Value="http://saltstack.org" />
    <Property Id="MASTER_HOSTNAME"                      Value="salt"                 />
    <Property Id="MINION_HOSTNAME"                      Value="$(env.COMPUTERNAME)"  />
    <Property Id="WIXUI_INSTALLDIR"                     Value="INSTALLFOLDER"        />
    <Property Id="MSIRESTARTMANAGERCONTROL"             Value="Disable"              />

	  <!-- 2016-11-13  mkr
	     An action in InstallExecuteSequence with attribute Before='SetMasterPropertiesCA' is already after the MSI created directories in TARGETDIR.
		 This is even the case for attribute Before='InstallFiles', but curiously, I dont see the salt/bin directory

		 I need to specify a custom action before any file operation because I need to manipulate the NSIS installation.
		 http://stackoverflow.com/questions/11668875/execute-a-custom-action-before-product-condition

		 I need a custom action that deals with NSIS.
		 The custom action shall be named PrepareEvironmentBeforeInstallation
		 More generally, I need to check the enviromnent, more specifically another application.
		 This custom action must be executed 'very early'.
		 The best bet for 'very early' seems to be before "LaunchConditions".
		 It is odd that LaunchConditions seems to only serve to terminate the installer.
		 From     http://stackoverflow.com/questions/11668875/execute-a-custom-action-before-product-condition
		   The LaunchConditions action is scheduled to run in both InstallUISequence and InstallExecuteSequence.
		   You must hook a 'very early' custom action before 'LaunchConditions' in both sequences.
		   You should define it with Execute='firstSequence' attribute - this way it will run (only?) the first sequence it is met in.
		 The Wix-definition of the custom action is in wix/MinionMSI/MinionConfigurationExtensionCA.wxs
		 The C# code        of the custom action is in wix/MinionConfigurationExtension/MinionConfiguration.cs

		 From  http://wixtoolset.org/documentation/manual/v3/xsd/wix/launchconditions.html
		   There are two more parents, maybe grown in the meantime. I add all of them.

		The result of the effort of 'very early' is this line
		Calling custom action MinionConfigurationExtension!MinionConfigurationExtension.MinionConfiguration.PrepareEvironmentBeforeInstallation
		in line 142 in logfile markus.log
		created with
		msiexec /i wix\MinionMSI\bin\Release\Salt-Minion-2016.3.11-amd64-Setup.msi /l*v markus.log
		I think line 142 is OK.
	-->

	<AdminUISequence>
		<Custom Action='PrepareEvironmentBeforeInstallation' Before='LaunchConditions'>NOT Installed</Custom>
	</AdminUISequence>

	<InstallUISequence>
		<Custom Action='PrepareEvironmentBeforeInstallation' Before='LaunchConditions'>NOT Installed</Custom>
	</InstallUISequence>

    <AdminExecuteSequence>
		<Custom Action='PrepareEvironmentBeforeInstallation' Before='LaunchConditions'>NOT Installed</Custom>
    </AdminExecuteSequence>

    <InstallExecuteSequence>
      <Custom Action='PrepareEvironmentBeforeInstallation' Before='LaunchConditions'>NOT Installed</Custom>

      <!-- 2016-11-13  mkr  Both C# and WiX custom actions are forced into an execution order by the Before attribute. -->
      <Custom Action='SetMasterPropertiesCA' Before='SetMaster'>NOT Installed</Custom>
      <Custom Action='SetMaster' Before='SetMinionIdPropertiesCA'>NOT Installed</Custom>

      <Custom Action='SetMinionIdPropertiesCA' Before='SetMinionId'>NOT Installed</Custom>
      <Custom Action='SetMinionId' Before='SetRootDirPropertiesCA'>NOT Installed</Custom>

      <Custom Action='SetRootDirPropertiesCA' Before='SetRootDir'>NOT Installed</Custom>
      <Custom Action='SetRootDir' Before='StartServices'>NOT Installed</Custom>

      <StartServices Sequence="5900">
        <![CDATA[START_MINION_SERVICE = "1"]]>
      </StartServices>
    </InstallExecuteSequence>

    <UIRef Id="WixUI_Minion" />
  </Product>

  <Fragment>
    <Directory Id="TARGETDIR" Name="SourceDir">
        <Directory Id="INSTALLFOLDER" Name="salt" />
    </Directory>
  </Fragment>

  <Fragment>
    <ComponentGroup Id="ProductComponents" Directory="INSTALLFOLDER">
      <ComponentGroupRef Id="dist" />
      <ComponentGroupRef Id="service" />
    </ComponentGroup>
  </Fragment>
</Wix>
