<?xml version="1.0" encoding="UTF-8"?>
<!-- see Product.wxs.comments.txt for more comments -->
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi" >
  <Product Id="*" UpgradeCode="{FC6FB3A2-65DE-41A9-AD91-D10A402BD641}" Language="1033" Version="$(var.InternalVersion)" 
    Name="Salt Minion $(var.DisplayVersion)" Manufacturer="SaltStack, Inc">

    <!-- Package must be the first element after Product and seems very related -->
    <Package  InstallerVersion="200" Compressed="yes" InstallScope="perMachine"  Keywords="infrastructure management" />

    <!-- set default values -->
    <Property Id="MASTER_HOSTNAME"          Value="salt"                 />
    <Property Id="MINION_HOSTNAME"          Value="$(env.COMPUTERNAME)"  />
    <Property Id="ARPURLINFOABOUT"          Value="http://saltstack.org" />
    <Property Id="KEEP_CONFIG"              Value="no"                   />
    <Property Id="ROOTDRIVE"                Value="$(env.SystemDrive)"   />   <!-- // do not chose the disk with most free space -->
    <Property Id="ARPPRODUCTICON"           Value="icon"                 />
    <Property Id="WIXUI_INSTALLDIR"         Value="INSTALLFOLDER"        />
    <Property Id="MSIRESTARTMANAGERCONTROL" Value="Disable"              />

    <InstallUISequence>
      <!-- 2016-11-13  mkr
		      To remove a previous NSIS installation but utilise its configuration (peelNSIS), this custom action must start 'early'.
		      Catch: If the installation then fails and rolls back, peeling cannot be undone.
	    -->
      <Custom Action='PrepareEvironmentBeforeInstallation' Before='AppSearch'>NOT Installed</Custom>
    </InstallUISequence>

    <InstallExecuteSequence>
      <Custom Action='PrepareEvironmentBeforeInstallation' Before='AppSearch'>NOT Installed</Custom>

      <!-- 2016-11-13  mkr  Both C# and WiX custom actions are forced into an execution order by the Before attribute. -->
      <Custom Action='SetRootDirPropertiesCA' Before='SetRootDir'>NOT Installed</Custom>
      <Custom Action='SetRootDir' Before='SetMasterPropertiesCA'>NOT Installed</Custom>

      <Custom Action='SetMasterPropertiesCA' Before='SetMaster'>NOT Installed</Custom>
      <Custom Action='SetMaster' Before='SetMinionIdPropertiesCA'>NOT Installed</Custom>

      <Custom Action='SetMinionIdPropertiesCA' Before='SetMinionId'>NOT Installed</Custom>
      <Custom Action='SetMinionId' Before='StartServices'>NOT Installed</Custom>

      <StartServices Sequence="5900">
        <![CDATA[START_MINION_SERVICE = "1"]]>
      </StartServices>
    </InstallExecuteSequence>


    <MajorUpgrade
      DowngradeErrorMessage="A newer version of [ProductName] is already installed."
      AllowSameVersionUpgrades="yes" />    <!-- // why has saxonww chosen yes? -->
    

    <Feature Id="ProductFeature" Title="Minion" Level="1">
      <ComponentGroupRef Id="ProductComponents" />  <!-- // include from below. Why so complicated ?  -->
    </Feature>

    <Icon Id="icon" SourceFile="$(var.dist)\salt.ico" />
    <WixVariable Id="WixUILicenseRtf" Value="LICENSE.rtf" />

    <!-- override the banners -->
    <WixVariable Id="WixUIBannerBmp" Value="Banner.jpg" />
    <WixVariable Id="WixUIDialogBmp" Value="Dialog.jpg" />

    <UIRef Id="WixUI_Minion" />                             <!-- // include from file WixUI_Minion.wxs in this directory -->
    
    <MediaTemplate EmbedCab="yes" CompressionLevel="low" /> <!-- // do not create cab files -->
    
  </Product>

  <!-- From the "Default WiX Project Template" -->
  <Fragment>
    <Directory Id="TARGETDIR" Name="SourceDir">
      <Directory Id="INSTALLFOLDER" Name="salt" />
    </Directory>
  </Fragment>

  <!-- From the "Default WiX Project Template" -->
  <Fragment>
    <ComponentGroup Id="ProductComponents" Directory="INSTALLFOLDER">
      <ComponentGroupRef Id="dist"    />       <!-- // include from file dist-amd64.wxs in this directory -->
      <ComponentGroupRef Id="service" />       <!-- // include from file service.wxs    in this directory -->
    </ComponentGroup>
  </Fragment>
</Wix>
