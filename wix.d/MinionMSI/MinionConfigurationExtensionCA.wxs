<?xml version="1.0" encoding="utf-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">
  <Fragment>
    <!--  
		    To remove a previous NSIS installation but utilise its configuration (peelNSIS), this custom action must start 'early'.
		    Catch: If the installation then fails and rolls back, peeling cannot be undone. 
    -->

    <!--
    Immediate custom action declarations ("IMCA_").
    You find the condition whento call it in InstallUISequence and InstallSequence in Product.wxs
    If in InstallUISequence and InstallExecuteSequence but only to be run once, must be qualified by 'firstSequence'.

    WiX-XML Immediate custom action SetMinionIdToHostname_IMCAX sets property MINION_ID to Computername (at install-time)
    -->
    <CustomAction Id="SetMinionIdToHostname_IMCAX"    Property="MINION_ID"   Value="[ComputerName]"                Execute='firstSequence'/>
    <CustomAction Id="ReadConfig_IMCAC"          BinaryKey='MinionConfigExt' DllEntry='ReadConfig_IMCAC'           Execute='firstSequence'/>
    <CustomAction Id="DECA_del_NSIS"             BinaryKey='MinionConfigExt' DllEntry='DECA_del_NSIS'              Execute='deferred' Return='check' Impersonate='no'/>
    <CustomAction Id="DECA_WriteConfig"          BinaryKey='MinionConfigExt' DllEntry='DECA_WriteConfig'           Execute='deferred' Return='check' Impersonate='no'/>
    <CustomAction Id="DECA_UninstallKeepConfig0" BinaryKey='MinionConfigExt' DllEntry='DECA_UninstallKeepConfig0'  Execute='deferred' Return='check' Impersonate='no'/>
    <CustomAction Id="DECA_UninstallKeepConfig1" BinaryKey='MinionConfigExt' DllEntry='DECA_UninstallKeepConfig1'  Execute='deferred' Return='check' Impersonate='no'/>
    <CustomAction Id="DECA_Upgrade"              BinaryKey='MinionConfigExt' DllEntry='DECA_Upgrade'               Execute='deferred' Return='check' Impersonate='no'/>
    <!--
         Deferred execution is necessary to change the configuration prior 
         to start the service, which is done during the install instead of running 'net start' at the end. 
         Running 'net start' would not produce any useful log information.

         "Immediate custom actions" (IMCA_) can get and set msi Properties using the "Session".
             Example: public static ActionResult ReadConfig_IMCAC(Session session)
             Session is a kind of dictionary/hash of msi properties
                  Example: session["MASTER"] = value;
                  Warning: WiX does not check if the property exists. The installer will only break at install time.

         "Deferred custom actions" (DECA_) require properties to be passed as Session.CustomActionData
         via separate type 51 "custom actions data helper" (CADH_):
           The 'Property=' attribute must be set to the name of the "deferred custom action" (DECA_) receiving the data, and
           the 'Value=' attribute must be a list of key=[Property] pairs.
               Example: public static ActionResult DECA_WriteConfig(Session session)
               Example: rootDir = session.CustomActionData["root_dir"]
               Warning: WiX does not check if the key exists. The installer will only break at install time.

         Actions are declared here and called (repeatedly) in Product.wxs.
         Actions must have C# Signature [CustomAction] public static ActionResult
    -->
    <!--  Naming/terminology changes from msi to Salt. -->    
    <CustomAction Id="CADH_WriteConfig"           Property="DECA_WriteConfig"           Value="root_dir=[INSTALLFOLDER];master=[MASTER];id=[MINION_ID];zmq_filtering=[ZMQ_FILTERING]" />
    <CustomAction Id="CADH_UninstallKeepConfig0"  Property="DECA_UninstallKeepConfig0"  Value="root_dir=[INSTALLFOLDER];master=[MASTER];id=[MINION_ID];keep_config=[KEEP_CONFIG]" />
    <CustomAction Id="CADH_UninstallKeepConfig1"  Property="DECA_UninstallKeepConfig1"  Value="root_dir=[INSTALLFOLDER];master=[MASTER];id=[MINION_ID];keep_config=[KEEP_CONFIG]" />
    <CustomAction Id="CADH_Upgrade"               Property="DECA_Upgrade"               Value="root_dir=[INSTALLFOLDER];master=[MASTER];id=[MINION_ID]" />
    <!-- NICETOHAVE test if DECA_UninstallKeepConfig* probably does not need  master=[MASTER];id=[MINION_ID] -->

    <Binary Id='MinionConfigExt' SourceFile='$(var.MinionConfigurationExtension.TargetDir)$(var.MinionConfigurationExtension.TargetName).CA.dll'/>
  </Fragment>
</Wix>
